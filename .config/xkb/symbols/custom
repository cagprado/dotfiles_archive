// Hacked keyboard layout to add dead keys and special symbols to lvl 3/4

default xkb_symbols "us" {
    include "custom(basic)"

    key <TLDE> { [dead_grave,   dead_tilde,      questiondown,         exclamdown           ] }; //  `   ~   ¿   ¡
    key <AE06> { [6,            dead_circumflex, dead_caron,           threequarters        ] }; //  6   ^   ˇ   ¾

    key <AD11> { [bracketleft,  braceleft,       leftsinglequotemark,  leftdoublequotemark  ] }; //  [   {   ‘   “
    key <AD12> { [bracketright, braceright,      rightsinglequotemark, rightdoublequotemark ] }; //  ]   }   ’   ”
    key <BKSL> { [backslash,    bar,             notequal,             doublelowquotemark   ] }; //  \   |   ≠   „

    key <AC10> { [semicolon,    colon,           degree,               ssharp               ] }; //  ;   :   °   ß
    key <AC11> { [dead_acute,   dead_diaeresis,  masculine,            ordfeminine          ] }; //  '   "   º   ª

    key <AB08> { [comma,        less,            ccedilla,             Ccedilla             ] }; //  ,   <   ç   Ç
    key <AB09> { [period,       greater,         periodcentered,       0x0100203f           ] }; //  .   >   ·   ‿
    key <AB10> { [slash,        question,        ellipsis,             U2044                ] }; //  /   ?   …   ⁄ (fraction bar)
};

xkb_symbols "br" {
    include "custom(basic)"
    include "kpdl(comma)"

    key <TLDE> { [apostrophe,   quotedbl,        questiondown,         exclamdown           ] }; //  '   "   ¿   ¡
    key <AE06> { [6,            dead_diaeresis,  dead_caron,           threequarters        ] }; //  6   "   ˇ   ¾

    key <AD11> { [dead_acute,   dead_grave,      leftsinglequotemark,  leftdoublequotemark  ] }; //  '   `   ‘   “
    key <AD12> { [bracketleft,  braceleft,       ordfeminine,          notsign              ] }; //  [   {   ª   ¬

    key <AC10> { [ccedilla,     Ccedilla,        ssharp,               notsign              ] }; //  ç   Ç   ß   ¬
    key <AC11> { [dead_tilde,   dead_circumflex, rightsinglequotemark, rightdoublequotemark ] }; //  ~   ^   ’   ”
    key <BKSL> { [bracketright, braceright,      masculine,            notsign              ] }; //  ]   }   º   ¬

    key <LSGT> { [backslash,    bar,             notequal,             notsign              ] }; //  \   |   ≠   ¬
    key <AB08> { [comma,        less,            doublelowquotemark,   lessthanequal        ] }; //  ,   <   „   ≤
    key <AB09> { [period,       greater,         periodcentered,       greaterthanequal     ] }; //  .   >   ·   ≥
    key <AB10> { [semicolon,    colon,           ellipsis,             guillemotleft        ] }; //  ;   :   …   «
    key <AB11> { [slash,        question,        degree,               guillemotright       ] }; //  /   ?   °   »
};

partial xkb_symbols "basic" {
    key <AE01> { [1,            exclam,          EuroSign,             oneeighth            ] }; //  1   !   €   ⅛
    key <AE02> { [2,            at,              yen,                  onequarter           ] }; //  2   @   ¥   ¼
    key <AE03> { [3,            numbersign,      sterling,             threeeighths         ] }; //  3   #   £   ⅜
    key <AE04> { [4,            dollar,          U2113,                onehalf              ] }; //  4   $   ℓ   ½
    key <AE05> { [5,            percent,         division,             fiveeighths          ] }; //  5   %   ÷   ⅝
    key <AE07> { [7,            ampersand,       dead_macron,          seveneighths         ] }; //  7   &   ¯   ⅞
    key <AE08> { [8,            asterisk,        infinity,             multiply             ] }; //  8   *   ∞   ×
    key <AE09> { [9,            parenleft,       partdifferential,     nabla                ] }; //  9   (   ∂   ∇
    key <AE10> { [0,            parenright,      emptyset,             zerosubscript        ] }; //  0   )   ∅   ₀
    key <AE11> { [minus,        underscore,      endash,               emdash               ] }; //  -   _   –   —
    key <AE12> { [equal,        plus,            plusminus,            0x01002213           ] }; //  =   +   ±   ∓

    key <AD01> { [q,            Q,               0x010003d5,           0x01002135           ] }; //  q   Q   ϕ   ℵ
    key <AD02> { [w,            W,               Greek_omega,          Greek_OMEGA          ] }; //  w   W   ω   Ω
    key <AD03> { [e,            E,               Greek_epsilon,        0x010003f5           ] }; //  e   E   ε   ϵ
    key <AD04> { [r,            R,               Greek_rho,            0x0100211c           ] }; //  r   R   ρ   ℜ
    key <AD05> { [t,            T,               Greek_tau,            dagger               ] }; //  t   T   τ   †
    key <AD06> { [y,            Y,               Greek_psi,            Greek_PSI            ] }; //  y   Y   ψ   Ψ
    key <AD07> { [u,            U,               Greek_upsilon,        0x010003d2           ] }; //  u   U   υ   ϒ
    key <AD08> { [i,            I,               Greek_iota,           0x01002111           ] }; //  i   I   ι   ℑ
    key <AD09> { [o,            O,               Greek_theta,          Greek_THETA          ] }; //  o   O   θ   Θ
    key <AD10> { [p,            P,               Greek_pi,             Greek_PI             ] }; //  p   P   π   Π

    key <AC01> { [a,            A,               Greek_alpha,          0x0100212b           ] }; //  a   A   α   Å
    key <AC02> { [s,            S,               Greek_sigma,          Greek_SIGMA          ] }; //  s   S   σ   Σ
    key <AC03> { [d,            D,               Greek_delta,          Greek_DELTA          ] }; //  d   D   δ   Δ
    key <AC04> { [f,            F,               Greek_phi,            Greek_PHI            ] }; //  f   F   φ   Φ
    key <AC05> { [g,            G,               Greek_gamma,          Greek_GAMMA          ] }; //  g   G   γ   Γ
    key <AC06> { [h,            H,               hstroke,              notsign              ] }; //  h   H   ħ   ¬
    key <AC07> { [j,            J,               integral,             0x01002211           ] }; //  j   J   ∫   ∑
    key <AC08> { [k,            K,               Greek_kappa,          notsign              ] }; //  k   K   κ   ¬
    key <AC09> { [l,            L,               Greek_lambda,         Greek_LAMBDA         ] }; //  l   L   λ   Λ

    key <AB01> { [z,            Z,               Greek_zeta,           lessthanequal        ] }; //  z   Z   ζ   ≤
    key <AB02> { [x,            X,               Greek_chi,            greaterthanequal     ] }; //  x   X   χ   ≥
    key <AB03> { [c,            C,               Greek_xi,             Greek_XI             ] }; //  c   C   ξ   Ξ
    key <AB04> { [v,            V,               Greek_nu,             squareroot           ] }; //  v   V   η   √
    key <AB05> { [b,            B,               Greek_beta,           guillemotleft        ] }; //  b   B   β   «
    key <AB06> { [n,            N,               Greek_eta,            guillemotright       ] }; //  n   N   η   »
    key <AB07> { [m,            M,               Greek_mu,             0x0100266b           ] }; //  m   M   μ   ♫

    //modifier_map Mod3 { Scroll_Lock };
    include "level3(ralt_switch)"
};
// vim: ft=xkb : tw=0
