# DEFINE VARIABLES ####################################################
VERBOSE    := false
LATEXARGS  := --shell-escape

# paths
BUILDDIR   := $(patsubst %/,%,$(dir $(lastword $(MAKEFILE_LIST))))
ASYDIR     := $(BUILDDIR)/plots
TEXDIR     := $(BUILDDIR)/tex
DEPDIR     := $(BUILDDIR)/.d
SHAREDIR   := $(BUILDDIR)/share
FINALDIR   := $(BUILDDIR)/final

# files
DOCUMENTS  := $(patsubst $(TEXDIR)/main_%.tex,%,$(wildcard $(TEXDIR)/main_*.tex))
PLOTS      := $(patsubst $(ASYDIR)/%.asy,%,$(wildcard $(ASYDIR)/*.asy))

# programs
SHELL      := /bin/sh
MV         := mv -f
CP         := cp
RM         := rm -f
MKDIR      := mkdir -p
ASY        := asy -nosafe -tex xelatex -cd $(ASYDIR)
ifeq ($(VERBOSE),true)
	LATEXMK = cd $(TEXDIR) && latexmk -pdf -pdflatex='xelatex' --latexoption='$(LATEXARGS)' --output-directory=main_$*.compile main_$*
else
	LATEXMK = cd $(TEXDIR) && latexrun -Wall --verbose-cmds --latex-cmd='xelatex' --latex-args='$(LATEXARGS)' -O main_$*.compile -o main_$*.compile/main_$*.pdf main_$*
endif

# FUNCTIONS
texfiles    = $(addprefix $(TEXDIR)/main_,$(addsuffix .tex,$1))
texbbl      = $(addprefix $(TEXDIR)/main_,$(addsuffix .bbl,$1))
texout      = $(addprefix $(TEXDIR)/main_,$(addsuffix .compile,$1))
texpdf      = $(addprefix $(BUILDDIR)/,$(addsuffix .pdf,$1))
asytex      = $(addprefix $(TEXDIR)/,$(addsuffix _asy.tex,$1)) $(addprefix $(TEXDIR)/,$(addsuffix _asy_0.pdf,$1))
asypdf      = $(addprefix $(TEXDIR)/,$(addsuffix _asy.pdf,$1))
asyeps      = $(addprefix $(TEXDIR)/,$(addsuffix _asy.eps,$1))
sharetex    = $(patsubst %,$(SHAREDIR)/%.make,$1)
finaltex    = $(patsubst %,$(FINALDIR)/%.make,$1)

# GENERAL RULES ###############################################################
default: $(call texpdf,$(DOCUMENTS))
.PHONY: default

$(DEPDIR)/makedepend: $(BUILDDIR)/makedepend.py $(BUILDDIR)/Makefile $(call texfiles,$(DOCUMENTS))
	@echo -e "\e[1mCreating dependency file '$(basename $@)'...\e[0m"
	@$(BUILDDIR)/makedepend.py $(call texfiles,$(DOCUMENTS))

# LATEX RULES #################################################################
# latex compilation => .pdf, .bbl
$(BUILDDIR)/%.pdf $(TEXDIR)/main_%.bbl: $(TEXDIR)/main_%.latex;
$(TEXDIR)/main_%.latex: $(TEXDIR)/main_%.tex
	@echo -e "\e[1mLatexing document '$*'...\e[0m"
	@$(LATEXMK)
	@$(CP) $(TEXDIR)/main_$*.compile/main_$*.pdf $(BUILDDIR)/$*.pdf
	@$(CP) $(TEXDIR)/main_$*.compile/main_$*.bbl $(TEXDIR)/main_$*.bbl >/dev/null 2>&1; true

# -- latex flattenization for sharing (with .bib) --
$(call sharetex,$(DOCUMENTS)):
	@$(eval DIR   := $(basename $@))
	@$(eval NAME  := $(notdir $(basename $@)))
	@$(eval FILES := $(filter-out %.tex %.pre,$^))
	@echo -e "\e[1mExporting document '$(NAME)' for sharing...\e[0m"
	@$(MKDIR) $(DIR)
	@$(if $(FILES),$(CP) $(FILES) $(DIR))
	@cd $(TEXDIR) && latexpand --fatal --keep-comments -o $(NAME)-share.tex main_$(NAME).tex >/dev/null 2>&1
	@$(MV) $(TEXDIR)/$(NAME)-share.tex $(DIR)/main_$(NAME).tex
.SECONDARY: $(call sharetex,$(DOCUMENTS))

# -- latex flattenization for submission (flatten .bbl) --
$(call finaltex,$(DOCUMENTS)):
	@$(eval DIR     := $(basename $@))
	@$(eval NAME    := $(notdir $(basename $@)))
	@$(eval FILES   := $(filter-out %.tex %.pre %.bbl,$^))
	@$(eval BBLFILE := $(addprefix --expand-bbl ,$(filter %.bbl,$(notdir $^))))
	@echo -e "\e[1mExporting document '$(NAME)' for submission...\e[0m"
	@$(MKDIR) $(DIR)
	@$(if $(FILES),$(CP) $(FILES) $(DIR))
	@cd $(TEXDIR) && latexpand --fatal --empty-comments $(BBLFILE) -o $(NAME)-final.tex main_$(NAME).tex >/dev/null 2>&1
	@$(MV) $(TEXDIR)/$(NAME)-final.tex $(DIR)/main_$(NAME).tex
.SECONDARY: $(call finaltex,$(DOCUMENTS))

# ASYMPTOTE RULES #############################################################
# standalone pdf file
$(TEXDIR)/%_asy.pdf: $(ASYDIR)/%.asy
	@echo -e "\e[1mMaking asymptote figure '$*'...\e[0m"
	@$(ASY) -outformat pdf $* -o $*_asy.pdf
	@$(MV) $(ASYDIR)/$*_asy.pdf $@
.SECONDARY: $(call asypdf,$(PLOTS))

# standalone eps file
$(TEXDIR)/%_asy.eps: $(ASYDIR)/%.asy
	@echo -e "\e[1mMaking asymptote figure '$*'...\e[0m"
	@$(ASY) -outformat eps $* -o $*_asy.eps
	@$(MV) $(ASYDIR)/$*_asy.eps $@
.SECONDARY: $(call asyeps,$(PLOTS))

# tex/pdf files
$(TEXDIR)/%_asy.tex $(TEXDIR)/%_asy_0.pdf: $(ASYDIR)/%.inline;
$(ASYDIR)/%.inline: $(ASYDIR)/%.asy
	@echo -e "\e[1mMaking inline asymptote figure '$*'...\e[0m"
	@$(ASY) -inlinetex $* -o $*_asy.tex
	@$(MV) $(ASYDIR)/$*_asy.tex $(ASYDIR)/$*_asy_0.pdf $(TEXDIR)
	@$(RM) $(ASYDIR)/$*_asy.tex.pre
.SECONDARY: $(call asytex,$(PLOTS))

# CLEANUP RULES ###############################################################
# cleanup plots
cleanasy:
	@echo -e "\e[1mCleaning up asymptote figure files...\e[0m"
	@$(RM) $(call asypdf,$(PLOTS)) $(call asyeps,$(PLOTS)) $(call asytex,$(PLOTS))
.PHONY: cleanasy

# clean intermediate files generated by latexmk, leaving final targets and asymptote
cleanbuild:
	@echo -e "\e[1mCleaning up intermediate files...\e[0m"
	@$(RM) -r $(call texout,$(DOCUMENTS))
.PHONY: cleanbuild

# clean intermediate files and final targets, leaving asymptote figures
clean: cleanbuild
	@echo -e "\e[1mCleaning up target files...\e[0m"
	@$(RM) -r $(call texpdf,$(DOCUMENTS)) $(call texbbl,$(DOCUMENTS)) $(SHAREDIR) $(FINALDIR)
.PHONY: clean

# clean everything, including asymptote and makedepend files
cleanall: clean cleanasy
	@echo -e "\e[1mCleaning makedepend...\e[0m"
	@$(RM) -r $(DEPDIR)
.PHONY: cleanall

-include $(DEPDIR)/makedepend
