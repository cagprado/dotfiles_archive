# Configure texengine: latex|pdflatex|lualatex
TEXENGINE  := TEMPLATE_OPTION_TEXENGINE

# DEFINE VARIABLES ####################################################
# programs
SHELL      := /bin/sh
MV         := mv -f
RM         := rm -f
ifeq ($(TEXENGINE),latex)
LATEXMK    := latexmk -cd -pdfdvi -latex='texfot --quiet $(TEXENGINE)'
else
LATEXMK    := latexmk -cd -pdf -pdflatex='texfot --quiet $(TEXENGINE)'
endif

# paths
BUILDDIR   := $(dir $(lastword $(MAKEFILE_LIST)))
DISTDIR    := $(BUILDDIR)dist
ASYDIR     := $(BUILDDIR)plots
SRCDIR     := $(BUILDDIR)tex
DEPDIR     := $(BUILDDIR).d

# targets
SOURCES    := $(wildcard $(SRCDIR)/main_*.tex)
TARGETS    := $(patsubst $(SRCDIR)/main_%.tex,$(BUILDDIR)%.pdf, $(SOURCES))
STALONE    := $(patsubst $(SRCDIR)/main_%,$(DISTDIR)/%, $(SOURCES))
ASYSRCS    := $(wildcard $(ASYDIR)/*.asy)
ASYPDF     := $(patsubst $(ASYDIR)/%,$(SRCDIR)/%.pdf, $(ASYSRCS))
ASYEPS     := $(patsubst $(ASYDIR)/%,$(SRCDIR)/%.eps, $(ASYSRCS))
ASYTEX     := $(patsubst $(ASYDIR)/%,$(SRCDIR)/%.inline, $(ASYSRCS))

# RULES ###############################################################

# build final documents in .pdf
all: $(TARGETS)
.PHONY: all

# build distribution .tex files in order to upload to editors
distribution: $(STALONE)
.PHONY: distribution

# compile latex as a dummy target, required for both: .pdf and .bbl
$(addsuffix .compile, $(TARGETS)): $(BUILDDIR)%.pdf.compile: $(SRCDIR)/main_%.tex
	@echo -e "\e[1mMaking document '$(basename $@)'...\e[0m"
	@$(LATEXMK) $<
	@$(MV) $(<:.tex=.pdf) $(basename $@)
.SECONDARY: $(addsuffix .compile, $(TARGETS))
$(addsuffix .compile, $(TARGETS)): $(BUILDDIR)Makefile

# actual targets .pdf and .bbl that uses dummy target .compile
$(TARGETS): %: %.compile
$(SOURCES:.tex=.bbl): $(SRCDIR)/main_%.bbl: $(BUILDDIR)%.pdf.compile

# distribution .tex files depend on the main .tex (and maybe .bbl too)
$(STALONE): $(DISTDIR)/%: $(SRCDIR)/main_% $(BUILDDIR)Makefile
	@echo -e "\e[1mGenerating stand alone laTeX file '$(basename $@)'...\e[0m"
	@mkdir -p $(DISTDIR)
	@$(eval FIGURES := $(shell cd $(SRCDIR) && test -e "$(notdir $(filter %.bbl,$^))" && \
		latexpand --show-graphics --expand-bbl $(notdir $(filter %.bbl,$^)) -o $(notdir $@) $(notdir $<) 2>&1 || \
		latexpand --show-graphics -o $(notdir $@) $(notdir $<) 2>&1 ))
	@mv $(SRCDIR)/$(notdir $@) $@
	@cp $(FIGURES) $(DISTDIR)

# generate .asy.pdf image (full .pdf asymptote figure)
# secondary because the actual dependency is the .asy file
$(ASYPDF): $(SRCDIR)/%.pdf: $(ASYDIR)/%
	@echo -e "\e[1mMaking figure '$@'...\e[0m"
	@asy -cd $(ASYDIR) -nosafe -tex pdflatex -outformat pdf $(notdir $<) -o $(notdir $<).pdf
	@mv $<.pdf $(SRCDIR)
.SECONDARY: $(ASYPDF)

# generate .asy.eps image (full .eps asymptote figure)
# secondary because the actual dependency is the .asy file
$(ASYEPS): $(SRCDIR)/%.eps: $(ASYDIR)/%
	@echo -e "\e[1mMaking figure '$@'...\e[0m"
	@asy -cd $(ASYDIR) -nosafe -tex latex -outformat eps $(notdir $<) -o $(notdir $<).eps
	@mv $<.eps $(SRCDIR)
.SECONDARY: $(ASYEPS)

# generate dummy .asy.inline image, required for .asy.tex and .asy_0.(pdf|eps)
$(ASYTEX): $(SRCDIR)/%.inline: $(ASYDIR)/%
	@echo -e "\e[1mMaking figure '$@'...\e[0m"
	@asy -inlinetex -cd $(ASYDIR) -nosafe -tex $(TEXENGINE) $(notdir $<) -o $(notdir $<).tex
	@mv $<.tex $<_0.* $(SRCDIR)
	@rm $<.tex.pre
.SECONDARY: $(addsuffix .inline, $(basename $(ASYTEX)))

# actual inline asymptote figures (.asy.tex and .asy_0.(pdf|eps))
# secondary because the actual dependency is the .asy file
$(addsuffix .tex, $(basename $(ASYTEX))): $(SRCDIR)/%.tex: $(SRCDIR)/%.inline
$(addsuffix _0.pdf, $(basename $(ASYTEX))): $(SRCDIR)/%_0.pdf: $(SRCDIR)/%.inline
$(addsuffix _0.eps, $(basename $(ASYTEX))): $(SRCDIR)/%_0.eps: $(SRCDIR)/%.inline
.SECONDARY: $(addsuffix .tex, $(basename $(ASYTEX))) $(addsuffix _0.pdf, $(basename $(ASYTEX))) $(addsuffix _0.eps, $(basename $(ASYTEX)))

# MAKEDEPEND: generates proper dependencies of documents that must be
# built previous to their own rules
$(DEPDIR)/makedepend: $(BUILDDIR)makedepend.py $(BUILDDIR)Makefile $(SOURCES) $(SRCDIR)/*.bib
	@echo -e "\e[1mCreating '$(basename $@) file...\e[0m"
	@$(BUILDDIR)makedepend.py $(SOURCES) -t $(TEXENGINE)

# CLEANUP #############################################################

# clean asymptote files
cleanasy:
	@echo -e "\e[1mCleaning up asymptote build files...\e[0m"
	@$(RM) $(FILES) $(ASYPDF) $(ASYEPS) $(ASYTEX:.inline=.tex) $(ASYTEX:.inline=_0.pdf) $(ASYTEX:.inline=_0.eps)
.PHONY: cleanasy

# clean intermediate files generated by latexmk, leaving final targets and asymptote
cleanbuild:
	@echo -e "\e[1mCleaning up intermediate files...\e[0m"
	@$(LATEXMK) -silent -C $(SOURCES)
	@$(RM) $(SRCDIR)/*eps-converted-to.pdf $(foreach NAME,$(basename $(SOURCES)),$(addprefix $(NAME), .dvi .bbl -blx.bib .pre .run.xml .synctex.gz .nav .snm .vrb .spl Notes.bib))
.PHONY: cleanbuild

# clean distribution .tex files
cleandist:
	@echo -e "\e[1mCleaning up distribution .tex files...\e[0m"
	@$(RM) -r $(DISTDIR)
.PHONY: cleandist

# clean intermediate files and final targets, leaving asymptote figures
clean: cleanbuild cleandist
	@echo -e "\e[1mCleaning up target files...\e[0m"
	@$(RM) $(TARGETS)
.PHONY: clean

# clean everything, including asymptote and makedepend files
cleanall: clean cleanasy
	@echo -e "\e[1mCleaning makedepend...\e[0m"
	@$(RM) -r $(DEPDIR)
.PHONY: cleanall

-include $(DEPDIR)/makedepend
