# Maintainer: Konstantin Gizdov < arch at kge dot pw >
# Contributor: Frank Siegert < frank.siegert at googlemail dot com >
# Contributor: Scott Lawrence < bytbox at gmail dot com >
# Contributor: Thomas Dziedzic < gostrc at gmail dot com >
# Contributor: Sebastian Voecking < voeck at web dot de >

pkgname=root5
pkgver=5.34.36
pkgrel=5
pkgdesc='C++ data analysis framework and interpreter from CERN.'
arch=('i686' 'x86_64')
url='http://root.cern.ch'
license=('LGPL2.1')
makedepends=('cmake')
depends=('cfitsio'
         'cern-vdt'
         'fftw'
         'ftgl'
         'gl2ps'
         'glew'
         'graphviz'
         'gsl'
         'hicolor-icon-theme'
         'intel-tbb'
         'libafterimage'
         'libiodbc'
         'libmariadbclient'
         'postgresql-libs'
         'python'
         'sqlite'
         'tex-gyre-fonts'  # solve the pixelized font problem as per Arch Wiki
         'unixodbc'
         'unuran'
         'xmlrpc-c')
optdepends=('blas: Optional extensions to TMVA'
            'fcgi: Language independent, high performant extension to CGI'
            'go: Go language support'
            'gcc-fortran: Enable the Fortran components of ROOT'
            'ocaml: OCAML support'
            'pythia: Pythia8 support'
            'python-numpy: numpy bindings'
            'tcsh: Legacy CSH support'
            'xrootd: XRootD support'
            'z3: Z3 Theorem prover support')
options=('!emptydirs')
install=root.install
source=("https://root.cern.ch/download/root_v${pkgver}.source.tar.gz"
        'enable_gcc6.patch'
        'root.sh'
        'rootd'
        'root.xml'
        'settings.cmake')
sha256sums=('fc868e5f4905544c3f392cc9e895ef5571a08e48682e7fe173bd44c0ba0c7dcd'
            'SKIP'
            '9d1f8e7ad923cb5450386edbbce085d258653c0160419cdd6ff154542cc32bd7'
            '3c45b03761d5254142710b7004af0077f18efece7c95511910140d0542c8de8a'
            '50c08191a5b281a39aa05ace4feb8d5405707b4c54a5dcba061f954649c38cb0')
prepare() {
    cd "${srcdir}/root"

    find . -type f -exec sed -e 's/\/bin\/env python/&2/' \
                             -e 's/python -O/python2 -O/g' \
                             -e 's/python -c/python2 -c/g' -i {} \;

    sed -e 's/python 2/python2 2/g' \
        -i configure

    sed -e 's/python $(pkgpyexecdir)/python2 $(pkgpyexecdir)/g' \
        -i cint/reflex/python/genreflex/Makefile.am

    sed -e 's/python /python2 /' \
        -i config/genreflex.in config/genreflex-rootcint.in

    # Horid glibc hack
    sed -e 's/__USE_BSD/__USE_MISC/' -i core/base/src/TTimeStamp.cxx

    # https://sft.its.cern.ch/jira/browse/ROOT-8180
    patch -p1 < "${srcdir}/enable_gcc6.patch"

    mkdir -p "${srcdir}/build"
    cd "${srcdir}/build"

    CFLAGS="${CFLAGS} -pthread" \
    CXXFLAGS="${CXXFLAGS} -pthread" \
    LDFLAGS="${LDFLAGS} -pthread -Wl,--no-undefined" \
    cmake -C "${srcdir}/settings.cmake" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_SYSCONFDIR=/etc \
    "${srcdir}/root"
}

build() {
    mkdir -p "${srcdir}/build"
    cd "${srcdir}/build"

    make ${MAKEFLAGS}
}

package() {
    cd "${srcdir}/build"

    make DESTDIR="${pkgdir}" install

    install -D "${srcdir}/root.sh" \
        "${pkgdir}/etc/profile.d/root.sh"
    install -D "${srcdir}/rootd" \
        "${pkgdir}/etc/rc.d/rootd"
    install -D -m644 "${srcdir}/root.xml" \
        "${pkgdir}/usr/share/mime/packages/root.xml"

    # use a file that pacman can track instead of adding directly to ld.so.conf
    install -d "${pkgdir}/etc/ld.so.conf.d"
    echo '/usr/lib/root' > "${pkgdir}/etc/ld.so.conf.d/root.conf"

    # link relevant binaries so it can be co-installed with root6
    ln -s root             "${pkgdir}"/usr/bin/root5
    ln -s root.exe         "${pkgdir}"/usr/bin/root5.exe
    ln -s root-config      "${pkgdir}"/usr/bin/root5-config

    rm -rf "${pkgdir}/etc/root/daemons"
}
